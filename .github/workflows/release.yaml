name: Publish Release assets
on:
  release:
    types: [published]

env:
  RUSTFLAGS: -D warnings
  CARGO_INCREMENTAL: 0
  RUSTUP_MAX_RETRIES: 10
  CARGO_NET_RETRY: 10

jobs:
  create-binary:
    name: create-binary
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            platform: linux
          - os: macos-latest
            platform: darwin
          - os: windows-latest
            platform: win32

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    # We need to disable the existing toolchain to avoid updating rust-docs
    # which takes a long time. The fastest way to do this is to rename the
    # existing folder, as deleting it takes about as much time as not doing
    # anything and just updating rust-docs.
    - name: Rename existing rust toolchain (Windows)
      if: matrix.os == 'windows-latest'
      run: Rename-Item C:\Users\runneradmin\.rustup\toolchains\stable-x86_64-pc-windows-msvc C:\Users\runneradmin\.rustup\toolchains\stable-x86_64-pc-windows-msvc.old

    - name: Install Rust toolchain
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        profile: minimal
        override: true
        components: rustfmt

    - name: Build with --release
      run: cargo build -v --release

    - name: Language Server - upload binary as Release Asset (ubuntu, macos)
      if: matrix.os != 'windows-latest'
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ github.event.release.upload_url }}
        asset_path: ./target/release/move-language-server
        asset_name: move-language-server-${{ matrix.platform }}
        asset_content_type: application/octet-stream

    - name: Language Server - upload binary as Release Asset (windows)
      if: matrix.os == 'windows-latest'
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ github.event.release.upload_url }}
        asset_path: ${{ github.workspace }}\target\release\move-language-server.exe
        asset_name: move-language-server-${{ matrix.platform }}.exe
        asset_content_type: application/octet-stream

    - name: Executor - upload binary as Release Asset (ubuntu, macos)
      if: matrix.os != 'windows-latest'
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ github.event.release.upload_url }}
        asset_path: ./target/release/executor_cli
        asset_name: move-executor-${{ matrix.platform }}
        asset_content_type: application/octet-stream

    - name: Executor - upload binary as Release Asset (windows)
      if: matrix.os == 'windows-latest'
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ github.event.release.upload_url }}
        asset_path: ${{ github.workspace }}\target\release\executor_cli.exe
        asset_name: move-executor-${{ matrix.platform }}.exe
        asset_content_type: application/octet-stream

    - name: Move Compiler - upload binary as Release Asset (ubuntu, macos)
      if: matrix.os != 'windows-latest'
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ github.event.release.upload_url }}
        asset_path: ./target/release/move-build
        asset_name: move-build-${{ matrix.platform }}
        asset_content_type: application/octet-stream

    - name: Move Compiler - upload binary as Release Asset (windows)
      if: matrix.os == 'windows-latest'
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ github.event.release.upload_url }}
        asset_path: ${{ github.workspace }}\target\release\move-build.exe
        asset_name: move-build-${{ matrix.platform }}.exe
        asset_content_type: application/octet-stream